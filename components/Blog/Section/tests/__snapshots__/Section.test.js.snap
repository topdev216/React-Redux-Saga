// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<BlogSection /> should match snapshoot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <section
    className="blogSection row column"
>
    <header>
        <h2
            className="blogSection__title"
        >
            Category
        </h2>
    </header>
    <PostList
        chunkStyle={true}
        data={
            Immutable.List [
                Immutable.Map {
                },
                Immutable.Map {
                },
                Immutable.Map {
                },
            ]
        }
        isLoading={false}
        jumbotronStyle={false}
        noPostsMessage="No posts here"
        showCategory={true}
    />
    <Button
        className="expanded secondary large mb-xl"
        element="button"
        onClick={undefined}
    >
        Read more 
        Category
    </Button>
</section>,
  "nodes": Array [
    <section
      className="blogSection row column"
>
      <header>
            <h2
                  className="blogSection__title"
            >
                  Category
            </h2>
      </header>
      <PostList
            chunkStyle={true}
            data={
                  Immutable.List [
                        Immutable.Map {
                        },
                        Immutable.Map {
                        },
                        Immutable.Map {
                        },
                  ]
            }
            isLoading={false}
            jumbotronStyle={false}
            noPostsMessage="No posts here"
            showCategory={true}
      />
      <Button
            className="expanded secondary large mb-xl"
            element="button"
            onClick={undefined}
      >
            Read more 
            Category
      </Button>
</section>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <BlogSection
        displayedPosts={
                Immutable.List [
                        Immutable.Map {
                        },
                        Immutable.Map {
                        },
                        Immutable.Map {
                        },
                ]
        }
        slug="category"
        title="Category"
        total={4}
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "displayedPosts": Immutable.List [
            Immutable.Map {
            },
            Immutable.Map {
            },
            Immutable.Map {
            },
],
          "slug": "category",
          "title": "Category",
          "total": 4,
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <section
          className="blogSection row column"
>
          <header>
                    <h2
                              className="blogSection__title"
                    >
                              Category
                    </h2>
          </header>
          <PostList
                    chunkStyle={true}
                    data={
                              Immutable.List [
                                        Immutable.Map {
                                        },
                                        Immutable.Map {
                                        },
                                        Immutable.Map {
                                        },
                              ]
                    }
                    isLoading={false}
                    jumbotronStyle={false}
                    noPostsMessage="No posts here"
                    showCategory={true}
          />
          <Button
                    className="expanded secondary large mb-xl"
                    element="button"
                    onClick={undefined}
          >
                    Read more 
                    Category
          </Button>
</section>,
        "_debugID": 2,
        "_renderedOutput": <section
          className="blogSection row column"
>
          <header>
                    <h2
                              className="blogSection__title"
                    >
                              Category
                    </h2>
          </header>
          <PostList
                    chunkStyle={true}
                    data={
                              Immutable.List [
                                        Immutable.Map {
                                        },
                                        Immutable.Map {
                                        },
                                        Immutable.Map {
                                        },
                              ]
                    }
                    isLoading={false}
                    jumbotronStyle={false}
                    noPostsMessage="No posts here"
                    showCategory={true}
          />
          <Button
                    className="expanded secondary large mb-xl"
                    element="button"
                    onClick={undefined}
          >
                    Read more 
                    Category
          </Button>
</section>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <BlogSection
    displayedPosts={
        Immutable.List [
            Immutable.Map {
            },
            Immutable.Map {
            },
            Immutable.Map {
            },
        ]
    }
    slug="category"
    title="Category"
    total={4}
/>,
}
`;
